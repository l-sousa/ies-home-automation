[{"/app/src/index.js":"1","/app/src/Movement.js":"2","/app/src/App.js":"3","/app/src/canvasjs.react.js":"4","/app/src/canvasjs.min.js":"5"},{"size":373,"mtime":1607986264818,"results":"6","hashOfConfig":"7"},{"size":1429,"mtime":1607986264818,"results":"8","hashOfConfig":"7"},{"size":3955,"mtime":1607986264818,"results":"9","hashOfConfig":"7"},{"size":2080,"mtime":1607986264818,"results":"10","hashOfConfig":"7"},{"size":479381,"mtime":1607986264818,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ubw9ml",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],["25","26"],"/app/src/Movement.js",[],"/app/src/App.js",["27"],"import React, { Component } from 'react';\nimport './App.css';\nimport CanvasJSReact from './canvasjs.react';\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar updateInterval = 5000;\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartData: [],\n            last: null\n        }\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    componentDidMount() {\n        var axios = require('axios');\n\n        var config = {\n            method: 'get',\n            url: '/api/values/2/period/12'\n        };\n\n        axios(config)\n            .then(response => {\n                const data_array = [];\n                response.data.forEach(item => data_array.push({ x: new Date(Date.parse(item.ts)), y: item.value, markerColor: \"#f6c23e\" }));\n                return data_array.reverse();\n            })\n            .then(data => {\n                this.setState({ chartData: data });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        setInterval(this.updateChart, updateInterval);\n    }\n\n    updateChart() {\n        var axios = require('axios');\n\n        var config = {\n            method: 'get',\n            url: '/api/values/2/last/1'\n        };\n\n        axios(config)\n            .then(response => {\n                const data_arrayy = [];\n                response.data.forEach(item => data_arrayy.push({ x: new Date(Date.parse(item.ts)), y: item.value, markerColor: \"#f6c23e\" }));\n                console.log(data_arrayy);\n                return data_arrayy;\n            })\n            .then(data => {\n                this.setState({ last: data[0] });\n            })\n            .then(data => {\n                console.log(\"Last\");\n                console.log(this.state.last);\n                var joined = this.state.chartData;\n                joined.push(this.state.last);\n                if (joined.length > 43200) {\n                    joined.shift();\n                }\n                \n                console.log(joined);\n                this.setState({ chartData: joined });\n                this.render();\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    render() {\n        const options = {\n            zoomEnabled: true,\n            title: {\n                text: \"Luminosidade nas últimas 12h\",\n                fontFamily: \"Nunito\",\n                fontColor: \"#5a5c69\",\n                fontSize: 25,\n                horizontalAlign: \"left\"\n            },\n            axisX:{\n                title: \"Hora\",\n                intervalType: \"hour\",        \n                valueFormatString: \"HH:mm:ss\", \n                titleFontColor: \"#5a5c69\",\n                labelFontColor: \"#5a5c69\",\n                labelFontFamily: \"Nunito\",\n                titleFontFamily: \"Nunito\",\n                gridColor: \"#5a5c69\",\n                lineColor: \"#5a5c69\"\n            },\n            axisY:{\n                title: \"% de luminosidade\",\n                gridThickness: 0.5,\n                titleFontColor: \"#5a5c69\",\n                labelFontColor: \"#5a5c69\",\n                labelFontFamily: \"Nunito\",\n                titleFontFamily: \"Nunito\",\n                gridColor: \"#5a5c69\"\n            },\n            toolTip:{   \n                content: \"{x}: {y}\"      \n            },\n            data: [{\n                type: \"spline\",\n                lineColor: \"#f6c23e\",\n                dataPoints: this.state.chartData\n            }]\n        }\n        return (\n            <div>\n                <CanvasJSChart options={options}\n                    onRef={ref => this.chart = ref}\n                />\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n            </div>\n        );\n    }\n}\n\n\nexport default App;","/app/src/canvasjs.react.js",["28"],"﻿/*\r\nCanvasJS React Charts - https://canvasjs.com/\r\nCopyright 2020 fenopix\r\n\r\n--------------------- License Information --------------------\r\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\r\nhttps://canvasjs.com/license/\r\n\r\n*/\r\nvar React = require('react');\r\nvar CanvasJS = require('./canvasjs.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\t\t\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.chart.destroy();\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n\tCanvasJSChart: CanvasJSChart,\r\n\tCanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSReact;","/app/src/canvasjs.min.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":5,"column":5,"nodeType":"35","messageId":"36","endLine":5,"endColumn":13},{"ruleId":"37","severity":1,"message":"38","line":1,"column":1,"nodeType":"39","messageId":"40","fix":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'CanvasJS' is assigned a value but never used.","Identifier","unusedVar","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"44","text":"45"},"no-global-assign","no-unsafe-negation",[-1,0],""]