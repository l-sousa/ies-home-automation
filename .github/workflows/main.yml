# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ cicd_test ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:




name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)




# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [11]
    name: Java ${{ matrix.java }} sample
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      steps:
      
      
      - uses: actions/checkout@v1
      - name: MVN Build Spring
        working-directory: ./backend
        run: mvn package -Dmaven.test.skip=true+
      
      - uses: actions/checkout@v2
      - name:  MVN Build Spring
        working-directory: ./backend
        run: docker build . --file Dockerfile --tag spring-backend:$(date +%s)
        
      - uses: actions/checkout@v1
      - name: Build the docker-compose stack
        run: docker-compose up -d
