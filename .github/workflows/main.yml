name: Pipeline

on: [push]
jobs:        
  build_project:
    runs-on: ubuntu-18.04

    steps:
    # Install dependencies.
    - name: 'gcr.io/cloud-builders/npm'
      args: ['install']

    # Unit test.
    - name: 'gcr.io/cloud-builders/npm'
      args: ['run', 'test:unit']

    # Build the new docker image.
    - name: 'gcr.io/cloud-builders/docker'
      args: ['build', '-t', 'gcr.io/$PROJECT_ID/gcb-docker-compose:latest', '.']

    # Run the app and dependencies in the background using docker-compose.
    # Warning: this won't be cleaned up, which might be an issue if you run it
    # with the local builder.
    - name: 'docker/compose:1.15.0'
      args: ['up', '-d']
      env:
      - 'PROJECT_ID=$PROJECT_ID'

    # Run the integration tests against the running docker-compose stack.
    - name: 'gcr.io/cloud-builders/npm'
      args: ['run', 'test:integration']
      env:
      - 'HOST=counter' # running container, container_name defined in the docker-compose.yml
      - 'PORT=50051'

    # Push the new image to the registry.
    images: ['gcr.io/$PROJECT_ID/gcb-docker-compose:latest']

  deploy:
    needs: [build_project]
    runs-on: ubuntu-18.04
    steps:
    - name: Set up GCloud
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '274.0.1'
        service_account_email: ${{ secrets.GCP_SERVICE_ACCT_EMAIL }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
    - run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set run/region ${{ secrets.GCP_REGION }}
        gcloud info
        
    - name: Deploy to Cloud Run
      run: gcloud run deploy ${{ env.APPLICATION_NAME }} --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest --platform=managed --allow-unauthenticated
  
